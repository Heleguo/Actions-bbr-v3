name: 构建带有BBRv3的内核

on:
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
  build:
    needs: cleanup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86_64, arm64]
    env:
      ARCH: ${{ matrix.arch }}
      KERNEL_VERSION: ""
    steps:
      - name: 获取内核版本
        id: get_kernel_version
        run: |
          version=$(curl -s https://www.kernel.org | grep -A 1 -m 1 "stable:" | grep -oP '\d+\.\d+\.\d+')
          echo "KERNEL_VERSION=$version" >> $GITHUB_ENV

      - name: 检出代码
        uses: actions/checkout@v4

      - name: 更新依赖项
        run: |
          sudo apt-get update
          # 安装所需的依赖项
          sudo apt-get install -y \
            git build-essential \
            libncurses-dev libssl-dev libelf-dev \
            libudev-dev libpci-dev libcap-dev libpcre2-dev \
            bison bc flex rsync debhelper \
            dpkg-dev fakeroot kmod cpio dwarves \
            lz4 zstd xz-utils curl jq \
            libcurl4-openssl-dev
          # 如果是 arm64 架构，安装 ARM 架构交叉编译工具链
          if [ "${{ matrix.arch }}" == "arm64" ]; then
            sudo apt-get install -y gcc-aarch64-linux-gnu
          fi

      - name: 创建目录
        run: mkdir ./kernel/

      - name: 下载内核源代码
        working-directory: ./kernel/
        run: |
          kernel_branch=$(echo "${{ env.KERNEL_VERSION }}" | grep -oP '^\d+\.\d+')
          git clone --branch linux-$kernel_branch.y https://github.com/gregkh/linux.git

      - name: 添加 Google BBRv3
        working-directory: ./kernel/linux/
        run: |
          git remote add google-bbr https://github.com/google/bbr.git
          git fetch google-bbr
          git checkout google-bbr/v3

      - name: 设置内核版本变量
        working-directory: ./kernel/linux/
        run: |
          IFS='.' read -r version patchlevel sublevel <<< "${{ env.KERNEL_VERSION }}"
          sed -i "s/^VERSION = .*/VERSION = $version/" Makefile
          sed -i "s/^PATCHLEVEL = .*/PATCHLEVEL = $patchlevel/" Makefile
          sed -i "s/^SUBLEVEL = .*/SUBLEVEL = $sublevel/" Makefile

      - name: 设置 .config
        working-directory: ./kernel/linux/
        run: |
          if [ "${{ matrix.arch }}" == "arm64" ]; then
            curl -sSL https://raw.githubusercontent.com/byJoey/Actions-bbr-v3/refs/heads/main/arm64.config > .config
            make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- olddefconfig
          else
            curl -sSL https://raw.githubusercontent.com/byJoey/Actions-bbr-v3/refs/heads/main/x86-64.config > .config
            make olddefconfig
          fi

      - name: 构建内核
        working-directory: ./kernel/linux/
        run: |
          if [ "${{ matrix.arch }}" == "arm64" ]; then
            make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- bindeb-pkg -j$(nproc)
          else
            make bindeb-pkg -j$(nproc)
          fi

      - name: 上传配置文件
        uses: actions/upload-artifact@v4
        with:
          name: config-${{ matrix.arch }}
          path: ./kernel/linux/.config

      - name: 上传deb包
        uses: actions/upload-artifact@v4
        with:
          name: deb-${{ matrix.arch }}
          path: ./kernel/linux-*.deb

      - name: 发布到Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ matrix.arch }}-${{ env.KERNEL_VERSION }}
          files: ./kernel/linux-*.deb
          body: "带有BBRv3的最新内核，适用于 ${{ matrix.arch }} 架构"
